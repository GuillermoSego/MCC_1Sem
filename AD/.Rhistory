install.packages("ggplot2")
library(ggplot2)
data <- read.csv("agosto23_bike.csv")
cd
clc
clean
clear
data <- read.csv("agosto23_bike.csv")
getwd()
setwd(/Desktop/MCC(AD))
getwd()
setwd(/Users/guillermo_sego/Desktop/MCC(AD))
setwd("/Users/guillermo_sego/Desktop/MCC(AD)")
setwd("Users/guillermo_sego/Desktop/MCC(AD)")
data <- read.csv("Users/guillermo_sego/Desktop/MCC/AD/agosto23_bike.csv")
data <- read.csv("/Users/guillermo_sego/Desktop/MCC/AD/agosto23_bike.csv")
data
head(data)
cat("\014")
library(ggplot2)
ggplot(mi_data, aes(x = Genero, y = Edad)) +
geom_violin() +
ggtitle("Violin Plot de Edad por Género") +
xlab("Género") +
ylab("Edad")
ggplot(data, aes(x = Genero, y = Edad)) +
geom_violin() +
ggtitle("Violin Plot de Edad por Género") +
xlab("Género") +
ylab("Edad")
head(data)
data["Anyo_de_nacimiento"]
edad = 2023 - data["Anyo_de_nacimiento"]
ggplot(data, aes(x = Genero, y = edad)) +
geom_violin() +
ggtitle("Violin Plot de Edad por Género") +
xlab("Género") +
ylab("Edad")
edad
head(data)
data$Edad <- 2023 - data$Anyo_de_nacimiento
head(data)
ggplot(data, aes(x = Genero, y = edad)) +
geom_violin() +
ggtitle("Violin Plot de Edad por Género") +
xlab("Género") +
ylab("Edad")
ggplot(data, aes(x = Genero, y = Edad)) +
geom_violin() +
ggtitle("Violin Plot de Edad por Género") +
xlab("Género") +
ylab("Edad")
ggplot(data, aes(x = Edad, y = Genero)) +
geom_violin() +
ggtitle("Violin Plot de Edad por Género") +
xlab("Género") +
ylab("Edad")
data_limpia <- subset(data, !is.na(Genero))
ggplot(data_limpia, aes(x = Edad, y = Genero)) +
geom_violin() +
ggtitle("Violin Plot de Edad por Género") +
xlab("Género") +
ylab("Edad")
ggplot(data_limpia, aes(x = Edad, y = Genero)) +
geom_violin() +
ggtitle("Violin Plot de Edad por Género") +
xlab("Edad") +
ylab("Genero")
ggplot(data_limpia, aes(x = Edad, y = Genero)) +
geom_violin() +
ggtitle("Violin Plot de Edad por Género") +
xlab("Edad") +
ylab("Género")
T8_P3
library(MASS)
# Función para simular una MVN
simula_mvn <- function(n, mu, A) {
d <- length(mu)
Y <- matrix(rnorm(n * d), ncol = d)
X <- Y %*% t(A) + matrix(mu, nrow = n, ncol = d, byrow = TRUE)
return(X)
}
C <- matrix(c(1, 0.5, 0.5, 0.5,
0.5, 1, 0.5, 0.5,
0.5, 0.5, 1, 0.5,
0.5, 0.5, 0.5, 1), ncol = 4) # Matriz de covarianza arbitraria
# Descomposición de Cholesky
A <- chol(C)
clc
clean
cl
library(ggplot2)
source("~/Desktop/MCC/AD/T8_P3.R")
# Visualización
ggplot(df, aes(X1, X2)) + geom_point(aes(color=X3, size=X4)) + theme_minimal()
source("~/Desktop/MCC/AD/T8_P3.R")
# Crear gráfica
ggplot(df, aes(x=X1, y=X2)) +
geom_point(aes(color=X1), alpha=0.6) +
labs(title="Scatter plot de X1 vs X2", x="X1", y="X2") +
theme_minimal()
source("~/Desktop/MCC/AD/T8_P3.R")
source("~/Desktop/MCC/AD/T8_P3.R")
# Crear gráfica
ggplot(df, aes(x=V1, y=V2)) +
geom_point(aes(color=V1), alpha=0.6) +
labs(title="Scatter plot de V1 vs V2", x="V1", y="V2") +
theme_minimal()
source("~/Desktop/MCC/AD/T8_P3.R")
source("~/Desktop/MCC/AD/kernel_regresssion.R")
install.packages('tinytex')
tinytex::install_tinytex()
tinytex:::is_tinytex()
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(ggplot2)
mu <- c(0, 0, 0, 0)
Sigma <- matrix(c(1, 0.8, 0.6, 0.5,
0.8, 1, 0.7, 0.6,
0.6, 0.7, 1, 0.7,
0.5, 0.6, 0.7, 1),
ncol=4)
set.seed(123) # Para reproducibilidad
sample_data <- mvrnorm(n=1000, mu=mu, Sigma=Sigma)
df <- as.data.frame(sample_data)
ggplot(df, aes(x=V1, y=V2)) +
geom_point(aes(color=V1), alpha=0.6) +
labs(title="Scatter plot de V1 vs V2", x="V1", y="V2") +
theme_minimal()
tinytex:::is_tinytex()
tinytex:::is_tinytex()
unlink("Desktop/MCC/AD/T8_cache", recursive = TRUE)
pandoc --version
pandoc --version
source("~/Desktop/MCC/AD/kernel_regresssion.R")
source("~/Desktop/MCC/AD/T8_P3.R")
# Crear gráfica
ggplot(df, aes(x=V1, y=V2)) +
geom_point(aes(color=V1), alpha=0.6) +
labs(title="Scatter plot de V1 vs V2", x="V1", y="V2") +
theme_minimal()
# Generar datos
set.seed(123) # Para reproducibilidad
source("~/Desktop/MCC/AD/T8_P3.R")
source("~/Desktop/MCC/AD/T8_P3.R")
# Crear gráficas
p1 <- ggplot(df1, aes(x=V1, y=V2)) +
geom_point(aes(color=V1), alpha=0.6) +
labs(title="Scatter plot de V1 vs V2 (Sigma1)", x="V1", y="V2") +
theme_minimal()
# Crear gráficas
p1 <- ggplot(df1, aes(x=V1, y=V2)) +
geom_point(aes(color=V1), alpha=0.6) +
labs(title="Scatter plot de V1 vs V2 (Sigma1)", x="V1", y="V2") +
theme_minimal()
source("~/Desktop/MCC/AD/T8_P6.R")
cd ..
source("~/Desktop/MCC/AD/T8_P6.R")
# Leer el archivo CSV
data <- read_csv("penguins.csv")
setwd("~/Desktop/MCC/AD")
# Eliminar filas con NA's para evitar problemas con ggplot2
data <- data[complete.cases(data), ]
data <- read.csv("penguins.csv")
source("~/Desktop/MCC/AD/T8_P6.R")
# 1. Histograma de bill_length_mm
ggplot(data, aes(x=bill_length_mm)) +
geom_histogram(binwidth=2, fill="blue", color="white", alpha=0.7) +
labs(title="Histograma de Longitud del Pico", x="Longitud del Pico (mm)", y="Número de Pingüinos") +
theme_minimal()
source("~/Desktop/MCC/AD/T8_P6.R")
# 2. Histograma de bill_depth_mm
ggplot(data, aes(x=bill_depth_mm)) +
geom_histogram(binwidth=1, fill="red", color="white", alpha=0.7) +
labs(title="Histograma de Profundidad del Pico", x="Profundidad del Pico (mm)", y="Número de Pingüinos") +
theme_minimal()
# 4. Histograma de flipper_length_mm
ggplot(data, aes(x=flipper_length_mm)) +
geom_histogram(binwidth=5, fill="green", color="white", alpha=0.7) +
labs(title="Histograma de Longitud de Aletas", x="Longitud de Aletas (mm)", y="Número de Pingüinos") +
theme_minimal()
# 6. Gráfico de barras de species
ggplot(data, aes(x=species, fill=species)) +
geom_bar(alpha=0.7) +
labs(title="Distribución de Especies", x="Especie", y="Número de Pingüinos") +
theme_minimal()
# 7. Gráfico de barras de island
ggplot(data, aes(x=island, fill=island)) +
geom_bar(alpha=0.7) +
labs(title="Distribución por Isla", x="Isla", y="Número de Pingüinos") +
theme_minimal()
# 5. Diagrama de caja de body_mass_g agrupado por sex
ggplot(data, aes(x=sex, y=body_mass_g, fill=sex)) +
geom_boxplot(alpha=0.7) +
labs(title="Diagrama de Caja de Masa Corporal por Sexo", x="Sexo", y="Masa Corporal (g)") +
theme_minimal()
# 3. Gráfico de dispersión entre bill_length_mm y bill_depth_mm
ggplot(data, aes(x=bill_length_mm, y=bill_depth_mm)) +
geom_point(aes(color=species), alpha=0.7) +
labs(title="Scatter Plot de Longitud vs. Profundidad del Pico", x="Longitud del Pico (mm)", y="Profundidad del Pico (mm)") +
theme_minimal()
# 6. Gráfico de barras de species
ggplot(data, aes(x=species, fill=species)) +
geom_bar(alpha=0.7) +
labs(title="Distribución de Especies", x="Especie", y="Número de Pingüinos") +
theme_minimal()
# 7. Gráfico de barras de island
ggplot(data, aes(x=island, fill=island)) +
geom_bar(alpha=0.7) +
labs(title="Distribución por Isla", x="Isla", y="Número de Pingüinos") +
theme_minimal()
# Gráfico de barras
ggplot(data, aes(x=island, fill=species)) +
geom_bar(position="dodge") +
labs(title="Distribución de pingüinos por especie e isla", x="Isla", y="Número de pingüinos") +
theme_minimal()
# Scatter plot
ggplot(data, aes(x=bill_length_mm, y=bill_depth_mm, color=species, shape=island)) +
geom_point(alpha=0.6) +
labs(title="bill_length_mm vs bill_depth_mm", x="Longitud del pico (mm)", y="Profundidad del pico (mm)") +
theme_minimal()
